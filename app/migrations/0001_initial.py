# Generated by Django 5.2.6 on 2025-09-27 01:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numero_matricula', models.CharField(max_length=50, unique=True)),
                ('numero_documento', models.CharField(max_length=50, unique=True)),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite')], default='manha', max_length=20)),
                ('papel', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor'), ('admin', 'Administrador')], default='aluno', max_length=20)),
                ('situacao', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo')], default='ativo', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True)),
                ('duracao_semestres', models.PositiveSmallIntegerField()),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to='app.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('creditos', models.PositiveSmallIntegerField()),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disciplinas', to='app.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_matricula', models.DateField(auto_now_add=True)),
                ('situacao', models.CharField(choices=[('matriculado', 'Matriculado'), ('trancado', 'Trancado'), ('reprovado', 'Reprovado'), ('aprovado', 'Aprovado'), ('incompleto', 'Incompleto')], default='matriculado', max_length=20)),
                ('aluno', models.ForeignKey(limit_choices_to={'papel': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, related_name='matriculas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Frequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('situacao', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente'), ('ausencia_justificada', 'Ausência Justificada')], max_length=20)),
                ('matricula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='app.matricula')),
            ],
        ),
        migrations.CreateModel(
            name='ResultadoFinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota_final', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_faltas', models.PositiveIntegerField(default=0)),
                ('situacao', models.CharField(choices=[('aprovado', 'Aprovado'), ('reprovado_por_nota', 'Reprovado por Nota'), ('reprovado_por_falta', 'Reprovado por Falta'), ('cursando', 'Cursando')], default='cursando', max_length=30)),
                ('matricula', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resultado_final', to='app.matricula')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacidade', models.PositiveIntegerField(default=0)),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='app.disciplina')),
                ('professor', models.ForeignKey(limit_choices_to={'papel': 'professor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='turmas', to=settings.AUTH_USER_MODEL)),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='app.semestre')),
            ],
        ),
        migrations.AddField(
            model_name='matricula',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matriculas', to='app.turma'),
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('peso', models.DecimalField(decimal_places=2, max_digits=5)),
                ('data', models.DateField()),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='app.turma')),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=5)),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='app.avaliacao')),
                ('matricula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='app.matricula')),
            ],
            options={
                'unique_together': {('avaliacao', 'matricula')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='matricula',
            unique_together={('aluno', 'turma')},
        ),
    ]
